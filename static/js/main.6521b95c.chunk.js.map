{"version":3,"sources":["Menu.js","Question.js","App.js","index.js"],"names":["Menu","props","react_default","a","createElement","className","onClick","start","Question","answersElement","q","answers","map","answer","id","checked","correct","selected","key","nanoid","handleClickAnswer","handleClick","atob","question","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","slicedToArray","started","setStarted","_useState3","_useState4","questions","setQuestions","_useState5","_useState6","count","setCount","_useState7","_useState8","setChecked","_useState9","_useState10","setCorrect","shuffleArray","arr","sort","Math","random","objectSpread","useEffect","_getQuestion","asyncToGenerator","_callee","res","data","_context","fetch","json","results","concat","toConsumableArray","incorrect_answers","correct_answer","apply","arguments","getQuestion","questionElement","src_Question","src_Menu","x","src","alt","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6521b95c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <div className=\"menu\">\r\n      <h1>Quizzical</h1>\r\n      <span className=\"page-description\">Description</span>\r\n      <button className=\"start-button\" onClick={() => props.start()}>Start Quiz</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { nanoid } from 'nanoid'\r\n\r\nfunction Question(props) {\r\n  let answers = props.q.answers\r\n\r\n  function handleClick(answer){\r\n    if (props.q.checked){\r\n      return\r\n    }\r\n    props.handleClickAnswer(props.id, answer)\r\n  }\r\n\r\n  const answersElement = answers.map(answer =>{\r\n    let id = null\r\n    if (props.q.checked){\r\n      if (props.q.correct === answer){\r\n        id = 'correct'\r\n      }\r\n      else if(props.q.selected === answer){\r\n        id = 'incorrect'\r\n      }\r\n      else{\r\n        id = 'not-selected'\r\n      }\r\n    }\r\n    return (\r\n    <button key={nanoid()} id={id} className={answer === props.q.selected ? 'answer selected' : 'answer'} onClick={() => handleClick(answer)}>{atob(answer)}</button>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <div className='question-container'>\r\n      <h3 className='question-title'>{atob(props.q.question)}</h3>\r\n        {answersElement}\r\n      <div className='line'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question","import React, { useState, useEffect } from 'react'\nimport Menu from './Menu'\nimport Question from './Question'\nimport { nanoid } from 'nanoid'\n\nfunction App() {\n  const [started, setStarted] = useState(false)\n  const [questions, setQuestions] = useState([]);\n  const [count, setCount] = useState(0)\n  const [checked, setChecked] = useState(false)\n  const [correct, setCorrect] = useState(0)\n\n\n  const shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\n\n  useEffect(() => {\n    async function getQuestion() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=medium&type=multiple&encode=base64\")\n      const data = await res.json()\n      let q = []\n      data.results.forEach(question =>{\n        q.push({id: nanoid(), answers:shuffleArray([...question.incorrect_answers, question.correct_answer]), question:question.question, correct:question.correct_answer, selected: null, checked:false})\n      })\n      setQuestions(q)\n  }\n    getQuestion()\n  }, [count])\n\n  function handleCheck(){\n    let selected = true\n    questions.forEach(question =>{\n      if (question.selected === null){\n        selected = false\n        return\n      }\n    })\n    if (!selected){\n      return\n    }\n    setQuestions(questions => questions.map(question => {\n      \n      return {...question, checked:true}\n    }))\n    setChecked(true)\n    let correct = 0\n    questions.forEach(question =>{\n      if (question.correct === question.selected){\n        correct += 1\n      }\n    })\n    setCorrect(correct)\n  }\n  function handleClickAnswer(id, answer) {\n    setQuestions(questions => questions.map(question =>{\n      return question.id === id ? {...question, selected: answer} : question\n    }))\n  }\n\n  function handlePlayAgain(){\n    setCount(count => count + 1)\n    setChecked(false)\n\n  }\n\n   const questionElement = questions ? questions.map(question =>{\n    return(\n      <Question\n       key={question.id}\n       q={question}\n       handleClickAnswer={handleClickAnswer}\n       id={question.id}\n      />\n    )\n   }) : []\n\n  function start(){\n    setStarted(x => !x)\n  }\n\n  return (\n    <div className='main-container'>\n      <div className='content-container'>\n        { started ? \n         <div className='start-content-container'>\n            {questionElement}\n          <div className='end-div'>\n          {checked && <span className='score'>You scored {correct}/5 correct answers</span>}\n          <button className='check' onClick={checked ? handlePlayAgain : handleCheck}>{checked ? 'Play Again' : 'Check Answer'}</button>\n         </div>\n        </div>\n         : \n         <Menu \n         start={start}\n         />}\n      </div>\n      \n      <div className='blob1'>\n        <img src=\"https://www.sefibogin.co.il/assets/img/elements/cycle13.png\" alt=\"\" />\n      </div>\n      <div className='blob'>\n        <img src=\"https://www.sefibogin.co.il/assets/img/home/Mobile/tempo_bottle_bg.png\" alt=\"\" />\n      </div>\n      \n    </div>\n    \n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <App />\n)"],"sourceRoot":""}